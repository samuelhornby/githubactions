name: AWS TEMPLATE
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      location:
        required: true
        type: string # use ${{ inputs.location }}
    secrets: 
        TF_API_TOKEN:
          required: true
        AWS_KEY_ID:
          required: true
        AWS_KEY_SECRET:
          required: true

jobs:
  myDeployment:
    runs-on: ubuntu-latest
    #environment: dev # need pro/enterprise to use environments...
    steps:

    - name: Checkout  
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Terraform Format
    #   id: fmt
    #   run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="backend.json"
      working-directory: ${GITHUB_WORKSPACE}/tf

    - name: Terraform Validate
      id: validate
      run: terraform validate -var-file="vars.tfvars"
      working-directory: ${GITHUB_WORKSPACE}/tf

    - name: Terraform Plan
      id: plan
      #if: github.event_name == 'pull_request'
      run: terraform plan -var-file="vars.tfvars" -var 'access_key=${{ secrets.AWS_KEY_ID }}' -var 'secret_key=${{ secrets.AWS_KEY_SECRET }}'
      working-directory: ${GITHUB_WORKSPACE}/tf
      #continue-on-error: true

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -var-file="vars.tfvars" -auto-approve
    #   working-directory: ${GITHUB_WORKSPACE}/tf
